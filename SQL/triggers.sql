
/*SELECT ID_FAMILIA, SUM(VALOR) FROM GASTOS G, ADMINISTRADOR A WHERE G.USUARIO_ADMIN = A.USUARIO
GROUP BY ID_FAMILIA;*/

/*TRIGGER QUE SIRVE PARA ACTUALIZAR EL TOTAL DE GASTOS Y LA CORRESPONDIENTE CATEGORIA EN LA TABLA HISTORIAL FINANZAS
AL MOMENTO QUE SE INGRESA UN NUEVO REGISTRO EN LA TABLA GASTOS, SI EL DATO NO EXISTE EN LA TABLA HF LO CREA*/
DROP TRIGGER IF EXISTS HISTORIAL_GASTOS;
DELIMITER ||
CREATE TRIGGER HISTORIAL_GASTOS AFTER INSERT ON GASTOS FOR EACH ROW
BEGIN

SET @FAMILIA = (SELECT ID_FAMILIA FROM ADMINISTRADOR A WHERE A.USUARIO = NEW.USUARIO_ADMIN LIMIT 1);

SET @MESX =(SELECT MES FROM HISTORIALFINANZAS WHERE MES = MONTH(NEW.FECHA_EMISION) AND ID_FAMILIA = @FAMILIA);
SET @ANIO =(SELECT AÑO FROM HISTORIALFINANZAS WHERE AÑO = YEAR(NEW.FECHA_EMISION) AND MES = MONTH(NEW.FECHA_EMISION) AND ID_FAMILIA = @FAMILIA);

IF(@MESX IS NULL OR @ANIO IS NULL) THEN 
	INSERT INTO HISTORIALFINANZAS(MES, AÑO, TOTAL_GASTOS, ID_FAMILIA) 
	VALUES(MONTH(NEW.FECHA_EMISION),YEAR(NEW.FECHA_EMISION),NEW.VALOR, @FAMILIA);
	CALL CATEGORIA_ALIMENTACION(NEW.ID_CATEGORIA, NEW.VALOR,MONTH(NEW.FECHA_EMISION),YEAR(NEW.FECHA_EMISION), @FAMILIA);
    CALL ACTUALIZAR_RESUMEN(@MESX, @ANIO, @FAMILIA);
ELSE
	UPDATE HISTORIALFINANZAS SET TOTAL_GASTOS = TOTAL_GASTOS + NEW.VALOR WHERE MES=@MESX AND AÑO = @ANIO AND ID_FAMILIA=@FAMILIA;
	CALL CATEGORIA_ALIMENTACION(NEW.ID_CATEGORIA, NEW.VALOR,MONTH(NEW.FECHA_EMISION),YEAR(NEW.FECHA_EMISION), @FAMILIA);
    CALL ACTUALIZAR_RESUMEN(@MESX, @ANIO, @FAMILIA);
END IF;
END ||
DELIMITER ;

/*TRIGGER QUE ACTUALIZA EL TOTAL DE INGRESOS DE LA TABLA HISTORIAL FINANZAS AL MOMENTO QUE SE CREA UN NUEVO INGRESO
SI EL DATO NO EXISTE EN LA TABLA HF LO CREA */
DROP TRIGGER IF EXISTS HISTORIAL_INGRESOS;
DELIMITER ||
CREATE TRIGGER HISTORIAL_INGRESOS AFTER INSERT ON INGRESOS FOR EACH ROW
BEGIN

SET @FAMILIA = (SELECT ID_FAMILIA FROM ADMINISTRADOR A WHERE A.USUARIO = NEW.USUARIO_ADMIN LIMIT 1);

SET @MESX =(SELECT MES FROM HISTORIALFINANZAS WHERE MES = MONTH(NEW.FECHA_INGRESO) AND ID_FAMILIA = @FAMILIA);
SET @ANIO =(SELECT AÑO FROM HISTORIALFINANZAS WHERE AÑO = YEAR(NEW.FECHA_INGRESO) AND MES = MONTH(NEW.FECHA_INGRESO) AND ID_FAMILIA = @FAMILIA);
SET @VALOR = (SELECT VALOR FROM USUARIOS USU WHERE USU.USUARIO = NEW.USUARIO AND USU.FAMILIA = @FAMILIA);


IF(@MESX IS NULL OR @ANIO IS NULL) THEN 
	INSERT INTO HISTORIALFINANZAS(MES, AÑO, TOTAL_INGRESOS, ID_FAMILIA) 
	VALUES(MONTH(NEW.FECHA_INGRESO),YEAR(NEW.FECHA_INGRESO),@VALOR, @FAMILIA);
    CALL ACTUALIZAR_RESUMEN(@MESX, @ANIO, @FAMILIA);
ELSE
	UPDATE HISTORIALFINANZAS SET TOTAL_INGRESOS = TOTAL_INGRESOS + @VALOR 
    WHERE MES=@MESX AND AÑO = @ANIO AND ID_FAMILIA=@FAMILIA;
    CALL ACTUALIZAR_RESUMEN(@MESX, @ANIO, @FAMILIA);
END IF;
END ||
DELIMITER ;

/*TRIGGER QUE HACE QUE NO SE REPITA EL GASTO EN EL MISMO MES */
DELIMITER ||
CREATE TRIGGER VALIDACION_SI_YA_EXISTE_EL_GASTO BEFORE INSERT ON GASTOS FOR EACH ROW
BEGIN
SET @FAMILIA = (SELECT ID_FAMILIA FROM ADMINISTRADOR WHERE USUARIO = NEW.USUARIO_ADMIN LIMIT 1);
SET @VALIDACION = (SELECT NOMBRE FROM GASTOS WHERE NOMBRE = NEW.NOMBRE AND MONTH(FECHA_EMISION) = MONTH(NEW.FECHA_EMISION) 
AND NEW.USUARIO_ADMIN IN (SELECT USUARIO FROM ADMINISTRADOR WHERE ID_FAMILIA = @FAMILIA));
IF(@VALIDACION IS NOT NULL) THEN
SIGNAL SQLSTATE "45000" SET MESSAGE_TEXT = "EL GASTO YA ESTA INGRESADO EN EL MES CORRESPONDIENTE";
END IF;
END ||
DELIMITER ;

/*TRIGGER QUE VERIFICA SI ANTES DE INGRESAR UN MENSAJE EL USUARIO Y EL MIEMBRO DE FAMILIA PERTENECEN A LA MISMA FAMILIA*/
DELIMITER ||
CREATE TRIGGER MIEMBRO_A_ADMIN BEFORE INSERT ON BUZON FOR EACH ROW
BEGIN 
CALL PERTENECEN_A_LA_MISMA_FAMILIA(NEW.USUARIO_ADMIN, NEW.USUARIOMF);
END ||
DELIMITER ;
